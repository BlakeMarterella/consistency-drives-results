/* tslint: disable */
// @ts-nocheck

/**
 * Helper script to protect sensitive variables and populate
 * the environment file automatically when the site is ran locally
 * or built for production
 * 
 * Inside of `package.json`, under the "scripts" section, you will see that
 * running config along with some arguments (specified below) will run this file.
 * Additionally inside of `package.json` the config script is called anytime
 * the server is started
 * 
 * Usage:
 *  - npm run config -- --environment=<dev,prod>
 * 
 * For more information on how this script was generated, follow this tutorial: 
 * https://betterprogramming.pub/how-to-secure-angular-environment-variables-for-use-in-github-actions-39c07587d590
 */

const { writeFile, existsSync, mkdirSync } = require("fs");
const { argv } = require("yargs");

require("dotenv").config();
const environment = argv.environment;

/**
 * 
 * @param targetPath 
 * @param environmentFileContent 
 */
function writeFileUsingFS(targetPath, environmentFileContent) {
  writeFile(targetPath, environmentFileContent, function (err) {
    if (err) {
      console.log(`Error writing to ${targetPath}`, err);
    }

    if (environmentFileContent !== '') {
        console.log(`Wrote variables to ${targetPath}`);
    }
  });
}

// Path to environment variable
const envDirectory = "./src/environments/";

// Creates the environments directory if it does not exist
if (!existsSync(envDirectory)) {
  mkdirSync(envDirectory);
}

const isProduction = environment === "prod";

const targetPath = `${envDirectory}environment.ts`;

// Content to be compiled dynamically an pasted into respective environment files
const environmentFileContent = `
  // This file was autogenerated by dynamically running setEnv.ts and using dotenv for managing API key secrets

  export const environment = {
    production: ${isProduction},
    firebase: {
        apiKey: '${process.env.API_KEY}',
        authDomain: '${process.env.AUTH_DOMAIN}',
        projectId: '${process.env.PROJECT_ID}',
        storageBucket: '${process.env.STORAGE_BUCKET}',
        messagingSenderId: '${process.env.MESSAGING_SENDER_ID}',
        appId: '${process.env.APP_ID}',
        measurementId: '${process.env.MEASUREMENT_ID}'
    },
  };
`;

writeFileUsingFS(targetPath, environmentFileContent);

/* tslint: enable */